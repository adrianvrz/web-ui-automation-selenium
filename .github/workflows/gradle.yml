name: Web UI Automation Testing

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      browser:
        description: 'Browser to run tests on'
        required: true
        default: 'chrome'
        type: choice
        options:
        - chrome
        - firefox
        - edge
      headless:
        description: 'Run in headless mode'
        required: true
        default: true
        type: boolean
      tags:
        description: 'Cucumber tags to run (e.g., @Regression)'
        required: false
        default: '@Regression'
        type: string

env:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"
  JAVA_VERSION: '21'

jobs:
  test:
    name: UI Automation Tests
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        browser: [chrome, firefox, edge]
      fail-fast: false
      
    steps:
    - name: 🛒 Checkout Repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: ☕ Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        cache: gradle

    - name: 🔧 Setup Chrome Browser
      if: matrix.browser == 'chrome' || github.event.inputs.browser == 'chrome'
      uses: browser-actions/setup-chrome@v1.7.3
      
    - name: 🦊 Setup Firefox Browser
      if: matrix.browser == 'firefox' || github.event.inputs.browser == 'firefox'
      uses: browser-actions/setup-firefox@v1.5.3
      
    - name: 🌐 Setup Edge Browser
      if: matrix.browser == 'edge' || github.event.inputs.browser == 'edge'
      uses: browser-actions/setup-edge@v1

    - name: 📋 Cache Gradle Dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: 🔑 Make gradlew executable
      run: chmod +x gradlew

    - name: 🏗️ Build Project
      run: ./gradlew clean compileJava compileTestJava --no-daemon

    - name: 🧪 Run Tests - Matrix Browser
      if: github.event_name != 'workflow_dispatch'
      run: |
        ./gradlew cucumber \
          -Dbrowser=${{ matrix.browser }} \
          -Dheadless=true \
          -Dtags=@Regression \
          --no-daemon \
          --continue
          
    - name: 🧪 Run Tests - Manual Trigger
      if: github.event_name == 'workflow_dispatch'
      run: |
        ./gradlew cucumber \
          -Dbrowser=${{ github.event.inputs.browser || 'chrome' }} \
          -Dheadless=${{ github.event.inputs.headless || 'true' }} \
          -Dtags='${{ github.event.inputs.tags || '@Regression' }}' \
          --no-daemon \
          --continue

    - name: 📊 Publish Test Results
      uses: dorny/test-reporter@v1.9.1
      if: always()
      with:
        name: 'Test Results (${{ matrix.browser }})'
        path: 'build/test-results/test/*.xml'
        reporter: java-junit
        fail-on-error: false

    - name: 📈 Upload Cucumber Reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: cucumber-reports-${{ matrix.browser }}
        path: |
          build/reports/cucumber.html
          build/reports/cucumber.json
          build/reports/tests/cucumber/
        retention-days: 30
        
    - name: 🎯 Upload Allure Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: allure-results-${{ matrix.browser }}
        path: build/allure-results/
        retention-days: 30

    - name: 📝 Comment Test Results on PR
      uses: phoenix-actions/test-reporting@v15
      if: always() && github.event_name == 'pull_request'
      with:
        name: 'UI Test Results (${{ matrix.browser }})'
        path: 'build/test-results/test/*.xml'
        reporter: java-junit
        output-to: 'step-summary'

  allure-report:
    name: 📊 Generate Allure Report
    runs-on: ubuntu-latest
    needs: test
    if: always()
    
    steps:
    - name: 🛒 Checkout Repository
      uses: actions/checkout@v4

    - name: 📥 Download All Allure Results
      uses: actions/download-artifact@v4
      with:
        pattern: allure-results-*
        path: allure-results
        merge-multiple: true

    - name: 🎯 Generate Allure Report
      uses: simple-elf/allure-report-action@v1.9
      if: always()
      with:
        allure_results: allure-results
        allure_report: allure-report
        gh_pages: gh-pages
        allure_history: allure-history

    - name: 🚀 Deploy Allure Report to GitHub Pages
      uses: peaceiris/actions-gh-pages@v4
      if: always()
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_branch: gh-pages
        publish_dir: allure-history

  security-scan:
    name: 🔒 Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: 🛒 Checkout Repository
      uses: actions/checkout@v4

    - name: ☕ Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'

    - name: 🔍 Run Dependency Check
      run: |
        ./gradlew dependencyCheckAnalyze --no-daemon
      continue-on-error: true

    - name: 📊 Upload Security Report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: dependency-check-report
        path: build/reports/dependency-check-report.html
        retention-days: 30

  notify:
    name: 📢 Notify Results
    runs-on: ubuntu-latest
    needs: [test, allure-report]
    if: always()
    
    steps:
    - name: 📊 Evaluate Test Results
      id: test-results
      run: |
        if [[ "${{ needs.test.result }}" == "success" ]]; then
          echo "status=✅ SUCCESS" >> $GITHUB_OUTPUT
          echo "color=good" >> $GITHUB_OUTPUT
        else
          echo "status=❌ FAILED" >> $GITHUB_OUTPUT
          echo "color=danger" >> $GITHUB_OUTPUT
        fi

    - name: 📱 Create Summary
      run: |
        echo "## 🧪 Test Execution Summary" >> $GITHUB_STEP_SUMMARY
        echo "- **Status**: ${{ steps.test-results.outputs.status }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Browsers Tested**: Chrome, Firefox, Edge" >> $GITHUB_STEP_SUMMARY
        echo "- **Test Suite**: @Regression" >> $GITHUB_STEP_SUMMARY
        echo "- **Allure Report**: [View Report](https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }})" >> $GITHUB_STEP_SUMMARY
        echo "- **Triggered by**: ${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
